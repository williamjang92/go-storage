#!/bin/bash

if [[ ! -f Gopkg.toml ]]; then
  echo "$0 should be run from the root of a Go project" >&2
  exit 1
fi

# Not all projects have a "cmd" folder
source_folders=($(find ./{cmd,pkg} -maxdepth 0 -type d 2>/dev/null))

# Autofix
if [[ "$1" == "--fix" ]]; then
  files=($(find "${source_folders[@]}" -type f -name '*.go' -not -name '*_mock.go' -not -name '*.pb.go'))

  if [[ -z "${files}" ]]; then
    echo "Could not find any file to lint" >&2
    exit
  fi

  msg="Linting ${#files[@]} files in ${source_folders[@]}"

  # Detect current package to put those imports after 3rd-party packages
  local_pkg=""
  if [[ -n "${GOPATH}" && -d "${GOPATH}/src" && "${PWD}" == "${GOPATH}/src"/* ]]; then
    local_pkg="-local ${PWD/$GOPATH\/src\//}"
    msg="${msg} with ${local_pkg}"
  fi

  echo "${msg}"
  goimports -w $local_pkg "${files[@]}" \
    && gofmt -w -s "${files[@]}"
  exit $?
fi

# Full lint
packages=($(echo "${source_folders[@]}" | sed 's/$/\/.../'))
GOMETALINTER_CONFIG="${GOMETALINTER_CONFIG:-.gometalinter.json}"

# Inspired from:
# https://github.com/Shopify/reportify/blob/master/script/lint

echo "Installing Linters..."
gometalinter --install >/dev/null

echo "Running gometalinter..."

if [[ -n "${JSON_PATH}${ANNOTATIONS_PATH}${CHECKSTYLE_PATH}${JUNIT_PATH}" ]]; then
  json="$(mktemp)"
  gometalinter --config "${GOMETALINTER_CONFIG}" -t --json "$@" "${packages[@]}" > "${json}"
  status=$?

  if [[ -n "${JSON_PATH}" ]]; then
    cat "${json}" > "${JSON_PATH}"
  fi

  if [[ -n "${ANNOTATIONS_PATH}" ]]; then
    cat "${json}" | bin/gometalinter2annotations > "${ANNOTATIONS_PATH}"
  fi

  if [[ -n "${CHECKSTYLE_PATH}${JUNIT_PATH}" ]]; then
    checkstyle="$(mktemp)"
    cat "${json}" | bin/gometalinter2checkstyle > "${checkstyle}"

    if [[ -n "${CHECKSTYLE_PATH}" ]]; then
      cat "${checkstyle}" > "${CHECKSTYLE_PATH}"
    fi

    if [[ -n "${JUNIT_PATH}" ]]; then
      cat "${checkstyle}" | bin/checkstyle2junit > "${JUNIT_PATH}"
    fi

    rm "${checkstyle}"
  fi

  rm "${json}"
  exit $status
else
  gometalinter --config "${GOMETALINTER_CONFIG}" -t "$@" "${packages[@]}"
  exit $?
fi
